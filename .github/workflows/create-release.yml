# This workflow will build and push a .NET Core app to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-dotnetcore?tabs=net60&pivots=development-environment-vscode
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
name: Build and deploy ASP.Net Core app to an Azure Web App

on:
  workflow_dispatch:
    inputs:
        version:
          description: 'Version'     
          required: true
        pre-release:
          description: 'Is this a pre-release?'
          required: true
          default: 'true'
        draft:
          description: 'Draft?'
          required: true
          default: 'true

jobs:
  build:
    runs-on: windows-latest

    env:
      Solution_Path: src/GameJoltLibrary.sln
      DOTNET_NOLOGO: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      # Install the .NET Core workload
      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Restore dependencies GameJoltLibrary
        run: dotnet restore $env:Solution_Path
      - name: Build GameJoltLibrary
        run: dotnet build --no-restore --configuration Release $env:Solution_Path
        
      - name: Build Playnite
        run: |
          ref/PlayniteRepo/build.ps1
          
      - name: pack GameJolLibrary
        run: |
          ref/PlayniteRepo/build/Release/Toolbox.exe pack build/Release build/pack

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: gamejoltlibrary
          path: build/pack

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: gamejoltlibrary
          path: pack

      - name: Automatic Releases
        uses: marvinpinto/action-automatic-releases@v1.2.1
          with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            automatic_release_tag: ${{ github.event.inputs.version }}
            prerelease: true
            draft: true
            files: |
              pack/*.pext

